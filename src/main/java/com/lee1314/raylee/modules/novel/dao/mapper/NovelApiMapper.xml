<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lee1314.raylee.modules.novel.dao.mapping.NovelApiDao">
	<resultMap id="BaseResultMap"
		type="com.lee1314.raylee.modules.novel.model.NovelApi">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="connects" property="connects" jdbcType="BIGINT" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, url, connects, status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from novel_api
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from novel_api
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.lee1314.raylee.modules.novel.model.NovelApi">
		insert into novel_api (id, url, connects,
		status)
		values (#{id,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR},
		#{connects,jdbcType=BIGINT},
		#{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.lee1314.raylee.modules.novel.model.NovelApi">
		insert into novel_api
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="connects != null">
				connects,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="connects != null">
				#{connects,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lee1314.raylee.modules.novel.model.NovelApi">
		update novel_api
		<set>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="connects != null">
				connects = #{connects,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lee1314.raylee.modules.novel.model.NovelApi">
		update novel_api
		set url = #{url,jdbcType=VARCHAR},
		connects = #{connects,jdbcType=BIGINT},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectUrls" resultType="com.lee1314.raylee.modules.novel.model.NovelApi">
		SELECT id, url, connects, status FROM novel_api WHERE status = 1 ORDER BY connects DESC
	</select>
	<select id="selectByConnects" resultType="com.lee1314.raylee.modules.novel.model.NovelApi">
		SELECT id, url, connects, status FROM novel_api WHERE status = 1 ORDER BY connects DESC limit 0,1
	</select>
</mapper>